About Syllabus Reviews Instructors Enrollment Options FAQ

WEEK
1
3 hours to complete
/******************
**** WEEK 1
**** Pointers 
*******************/
Pointers are one of the most important and powerful aspects of the C language. Pointers are critical to understanding
arrays, which let you manipulate sequences of data. They also give a programmer control and flexibility when... 
5 videos (Total 16 min), 15 readings, 3 quizzes
========================================
5 videos
	11 Introduction to Pointers, Arrays, and Recursion 1m
	12 Naive Swap 2m
	13 Pointers 2m
	14 Corrected Swap 2m
	15 Swap with Hardware 6m
========================================
15 readings
Pointer Basics 10m
Pictures 10m
Swap Revisited 10m
The Practice Programming Environment 10m
Assignment 11_read_ptr1 10m
Pointers under the Hood 10m
A Program's View of Memory 10m
NULL 10m
Pointers to Structs 10m
Pointers to Pointers 10m
const 10m
Aliasing 10m
Pointer Arithmetic 10m
Use Memory Checker Tools 10m
Assignment 12_read_ptr2 10m
========================================
3 practice exercises
Pointers Conceptually 6m
Pointers in Hardware 6m
Pointers to Sophisticated Types 6m

WEEK
2
/******************
**** WEEK 2
**** Arrays 
*******************/
2 hours to complete
Arrays
Arrays are sequences of memory of the same type that are guaranteed to be one after another. This is an incredibly useful
data format, enabling you to store many things together under one variable name. In this module, you will lea... 
5 videos (Total 18 min), 9 readings, 1 quiz
5 videos
	21 Array Access with Pointer Arithmetic 2m
	22 Array Access with Pointer Indexing 1m
	23 Index of Largest Element 6m
	24 Closest Point Step-Through 3m
	25 Dangling Pointers 3m
==========================================================
9 readings
Cryptography Motivation10m
Array Declaration and Initialization10m
Accessing an Array10m
Passing Arrays as Parameters10m
Writing Code with Arrays10m
Assignment 13_read_arr110m
Dangling Pointers10m
Array Size10m
Assignments 14_array_max, 15_tests_subseq, 16_subseq10m
==========================================================
1 practice exercise
Array Basics6m
==========================================================

WEEK
3
/*********************
**** WEEK 3
**** Uses of Pointers
**********************/
4 hours to complete
Uses of Pointers
Now that you have mastered the basics of pointers and arrays, it is time to see some important uses of them. In this module,
you will learn about how to manipulate strings and multi-dimensional arrays. You will also learn about functio... 
==========================================================
4 videos (Total 22 min), 18 readings, 2 quizzes
4 videos
	31 Compare Two Strings 7m
	32 Copy a String4m
	33 Incompatible Representations 5m
	34 Buffer Overflow 4m
==========================================================
18 readings
String Literals10m
Mutable Strings10m
String Equality10m
String Copying10m
Converting Strings to ints10m
Standard Library Functions10m
Assignments 17_read_arr2 and 18_reverse_str10m
Introduction10m
Declaration10m
Indexing10m
Initializing10m
Array of Pointers10m
Incompatibility10m
Array of Strings10m
Assignments 19_bits_arr and 20_rot_matrix10m
Function Pointer Basics10m
Sorting Functions10m
Format String Attacks10m
==========================================================
2 practice exercises
Function Pointers6m
Security Hazards6m
==========================================================

WEEK
4
/******************
**** WEEK 4
**** Recursion 
*******************/
2 hours to complete
Recursion
By now you are familiar with iteration, in which repetition is expressed in terms of loops. Another programming technique to
accomplish similar ideas is "recursion" in which a more complex instance of a problem is expressed in terms o... 
==========================================================
8 videos (Total 29 min), 10 readings, 1 quiz
8 videos
41 Executing Recursive Factorial by Hand 2m
42 Writing Factorial Recursively 6m
43 Translating Recursive Factorial to Code 1m
44 Writing Fibonacci Recursively 6m
45 Translate Recursive Fibonacci to Code 4m
46 Duplication of Computation in Fibonacci 1m
47 Execution of the Tail Recursive Implementation of Factorial 4m
48 Execution of Mutually Recursive isOdd and isEven 1m
==========================================================
10 readings
Introduction to Recursion2m
Reading Recursive Code10m
Principles of Writing Recursive Code10m
Is Recursion Slow?10m
Assignment 21_read_rec110m
Tail Recursion10m
Equivalence of Tail Recursion and Iteration10m
Mutual Recursion10m
Assignments 22_tests_power and 23_power_rec10m
(Optional) Recursion Theory10m
==========================================================
1 practice exercise
Reading Recursion6m
==========================================================
WEEK
5
/******************
**** WEEK 5
**** Project 
*******************/
2 hours to complete
Project
Now that you have learned about pointers and arrays, you will build on the code you wrote in Course 2 to build a deck of
cards and evaluate a poker hand. In the next course, you will complete the program to calculate poker odds w... 
5 readings, 1 quiz
5 readings
If you did not take Course 2...10m
Building a Deck2m
Assignment c3prj1_deck10m
Evaluating a Hand10m
Assignment c3prj2_eval10m
==========================================================
/******************
**** Instructors
*******************/

Andrew D. Hilton
Associate Professor of the Practice
Electrical and Computer Engineering

Anne Bracy
Senior Lecturer
Computer Science, Cornell University

Genevieve M. Lipp
Adjunct Professor
Electrical and Computer Engineering/Mechanical Engineering

Liz Wendland
==========================================================
	About Duke University
Duke University has about 13,000 undergraduate and graduate students and
a world-class faculty helping to expand the frontiers of knowledge. The
university has a strong commitment to applying knowledge in service to
society, both near its North Carolina campus and around the world.
==========================================================
github 
https://github.com/AhmedElbisher/Programming-Fundamentals-c-course-by-Duke-university